import groovy.json.JsonSlurper

buildscript {
    repositories {
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.0'
    }
}

apply plugin: 'com.android.library'

boolean dash = false, hls = false, smoothstreaming = false

File file = file('../../../track-player.json')
if(file.exists()) {
    def json = new JsonSlurper().parseText(file.text)
    dash = json.dash ?: dash
    hls = json.hls ?: hls
    smoothstreaming = json.smoothstreaming ?: smoothstreaming
}

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

android {
	publishNonDefault true

	flavorDimensions "store"
	productFlavors {
        google {
			dimension "store"
		}
        amazon {
			dimension "store"
		}
    }

	buildTypes {
        release {}
	}

    compileSdkVersion safeExtGet("compileSdkVersion", 27)

    defaultConfig {
        minSdkVersion safeExtGet("minSdkVersion", 16) // RN's minimum version
        targetSdkVersion safeExtGet("targetSdkVersion", 27)

        versionCode 1
        versionName "1.0"
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }

        consumerProguardFiles 'proguard-rules.txt'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    maven {
        // As RN is not updated in jcenter anymore, we'll have to grab it from npm
        // Make sure you have installed the react-native npm package before compiling
        url "../node_modules/react-native/android"
    }

    jcenter()
    google()
    mavenCentral()
}

// Build variants get passed to this module,
// so that it can use either google or amazon libraries.
// https://medium.com/@elye.project/support-flavors-and-buildtypes-across-library-modules-31acf9c6d806

configurations {
	google
	amazon
}

dependencies {
    
    //noinspection GradleDynamicVersion
    implementation 'com.facebook.react:react-native:+'

    // ExoPlayer Core
    googleImplementation 'com.google.android.exoplayer:exoplayer-core:2.9.6'
    amazonImplementation 'com.amazon.android:exoplayer-core:2.9.6'

    // ExoPlayer DASH
    if (dash) {
        googleImplementation 'com.google.android.exoplayer:exoplayer-dash:2.9.6'
        amazonImplementation 'com.amazon.android:exoplayer-dash:2.9.6'
    } else {
        googleCompileOnly 'com.google.android.exoplayer:exoplayer-dash:2.9.6'
        amazonCompileOnly 'com.amazon.android:exoplayer-dash:2.9.6'
    }

    // ExoPlayer HLS
    if (hls) {
        googleImplementation 'com.google.android.exoplayer:exoplayer-hls:2.9.6'
        amazonImplementation 'com.amazon.android:exoplayer-hls:2.9.6'
    } else {
        googleCompileOnly 'com.google.android.exoplayer:exoplayer-hls:2.9.6'
        amazonCompileOnly 'com.amazon.android:exoplayer-hls:2.9.6'
    }

    // ExoPlayer SmoothStreaming
    if (smoothstreaming) {
        googleImplementation 'com.google.android.exoplayer:exoplayer-smoothstreaming:2.9.6'
        amazonImplementation 'com.amazon.android:exoplayer-smoothstreaming:2.9.6'
    } else {
        googleCompileOnly 'com.google.android.exoplayer:exoplayer-smoothstreaming:2.9.6'
        amazonCompileOnly 'com.amazon.android:exoplayer-smoothstreaming:2.9.6'
    }

    // Make sure we're using at least the support library 27.1.1
    implementation "com.android.support:support-compat:${safeExtGet('supportLibVersion', '27.1.1')}"
    implementation "com.android.support:support-media-compat:${safeExtGet('supportLibVersion', '27.1.1')}"
    implementation 'com.github.bumptech.glide:glide:4.7.1'
}
