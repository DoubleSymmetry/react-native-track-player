name: validate
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      is-docs-only: ${{ steps.filter.outputs.docs-only }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            docs-only:
              - 'docs/**'
  check-typescript:
    runs-on: ubuntu-latest
    needs: check-changes
    steps:
      - name: Checkout Repo
        if: ${{ needs.check-changes.outputs.is-docs-only == 'false' }}
        uses: actions/checkout@v3
      - name: Setup Node
        if: ${{ needs.check-changes.outputs.is-docs-only == 'false' }}
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - name: Install Dependencies
        if: ${{ needs.check-changes.outputs.is-docs-only == 'false' }}
        run: |-
          yarn install --frozen-lockfile
      - name: Install Example Dependencies
        if: ${{ needs.check-changes.outputs.is-docs-only == 'false' }}
        run: |-
          cd example
          yarn install --frozen-lockfile
      - name: Check Lint, Format & Types
        if: ${{ needs.check-changes.outputs.is-docs-only == 'false' }}
        run: |
          yarn run ci:lint
          yarn run ci:format
          yarn run types
      - name: Example - Check Lint, Format & Types
        if: ${{ needs.check-changes.outputs.is-docs-only == 'false' }}
        run: |
          cd example
          yarn run ci:lint
          yarn run ci:format
          yarn run types
  build-ios:
    runs-on: blaze/macos-14
    needs: check-changes
    steps:
      - name: Checkout Repo
        if: ${{ needs.check-changes.outputs.is-docs-only == 'false' }}
        uses: actions/checkout@v3
      - name: Setup Node
        if: ${{ needs.check-changes.outputs.is-docs-only == 'false' }}
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - name: Setup Ruby
        if: ${{ needs.check-changes.outputs.is-docs-only == 'false' }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1.0'
          bundler-cache: false
      - name: Install Library Dependencies
        if: ${{ needs.check-changes.outputs.is-docs-only == 'false' }}
        run: yarn install --frozen-lockfile
      - name: Build Library
        if: ${{ needs.check-changes.outputs.is-docs-only == 'false' }}
        run: yarn build
      - name: Install Example Dependencies
        if: ${{ needs.check-changes.outputs.is-docs-only == 'false' }}
        run: |-
          cd example
          yarn install --frozen-lockfile
      - name: Bundler
        if: ${{ needs.check-changes.outputs.is-docs-only == 'false' }}
        run: |-
          cd example/ios
          bundle install
      - name: Cache Cocoapods Dependencies
        if: ${{ needs.check-changes.outputs.is-docs-only == 'false' }}
        uses: actions/cache@v2
        with:
          path: example/ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('example/ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - name: Cococapods
        if: ${{ needs.check-changes.outputs.is-docs-only == 'false' }}
        run: |-
          cd example/ios
          bundle exec pod install
      - name: Build App
        if: ${{ needs.check-changes.outputs.is-docs-only == 'false' }}
        run: |-
          cd example/ios
          xcodebuild build -workspace RNTPExample.xcworkspace -scheme RNTPExample -destination 'platform=iOS Simulator,name=iPhone 12 Pro'
  build-android:
    runs-on: ubuntu-latest
    needs: check-changes
    steps:
      - name: Checkout Repo
        if: ${{ needs.check-changes.outputs.is-docs-only == 'false' }}
        uses: actions/checkout@v3
      - name: Setup Node
        if: ${{ needs.check-changes.outputs.is-docs-only == 'false' }}
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - name: Install Library Dependencies
        if: ${{ needs.check-changes.outputs.is-docs-only == 'false' }}
        run: yarn install --frozen-lockfile
      - name: Build Library
        if: ${{ needs.check-changes.outputs.is-docs-only == 'false' }}
        run: yarn build
      - name: Install Mobile Dependencies
        if: ${{ needs.check-changes.outputs.is-docs-only == 'false' }}
        run: |-
          cd example
          yarn install
      - name: Cache Gradle Wrapper
        if: ${{ needs.check-changes.outputs.is-docs-only == 'false' }}
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('example/android/gradle/wrapper/gradle-wrapper.properties') }}
      - name: Cache Gradle Dependencies
        if: ${{ needs.check-changes.outputs.is-docs-only == 'false' }}
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('example/android/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-
      - name: Build App
        if: ${{ needs.check-changes.outputs.is-docs-only == 'false' }}
        run: |-
          cd example/android
          ./gradlew assembleDebug --no-daemon
